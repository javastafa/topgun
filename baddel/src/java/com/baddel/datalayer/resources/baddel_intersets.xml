<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="baddel_intersets" >
	<resultMap id="baddel_intersetsResultMap" class="com.baddel.datalayer.model.BaddelIntersets" >
		<result column="id" property="id"/> <result column="name" property="name"/> 
	</resultMap>    
    <cacheModel  id="baddel_intersetsCache" type="OSCACHE" >
		<flushInterval  hours="24"/>
		<flushOnExecute statement="baddel_intersets_insertSelective"/>
		<flushOnExecute statement="baddel_intersets_updateByPrimaryKeySelective"/>
		<flushOnExecute statement="baddel_intersets_deleteByid"/> <flushOnExecute statement="baddel_intersets_deleteByname"/> 
		<property name="reference-type" value="SOFT"/>        
    </cacheModel>

	<select id="baddel_intersets_selectByid" resultMap="baddel_intersetsResultMap" cacheModel="baddel_intersetsCache"> select * from `baddel`.`baddel_intersets` where `baddel`.`baddel_intersets`.`id` = #value# </select> <select id="baddel_intersets_selectByname" resultMap="baddel_intersetsResultMap" cacheModel="baddel_intersetsCache"> select * from `baddel`.`baddel_intersets` where `baddel`.`baddel_intersets`.`name` like #value# </select> 
	<select id="baddel_intersets_max" resultClass="java.lang.Integer" > 
		select max(`id`) as maxid from `baddel`.`baddel_intersets`; 
	</select>
	<select id="baddel_intersets_count" resultClass="java.lang.Integer" > 
		select count(*) from `baddel`.`baddel_intersets`; 
	</select>
	<select id="baddel_intersets_selectAll" resultMap="baddel_intersetsResultMap" cacheModel="baddel_intersetsCache" > 
		select * from `baddel`.`baddel_intersets` ; 
	</select>

	<select id="baddel_intersets_search" resultMap="baddel_intersetsResultMap" cacheModel="baddel_intersetsCache"> 
	select * from `baddel`.`baddel_intersets` where $value$ 
	</select>

	<delete id="baddel_intersets_deleteByid" > delete  from baddel.baddel_intersets where `baddel`.`baddel_intersets`.`id` = #value# </delete> <delete id="baddel_intersets_deleteByname" > delete  from baddel.baddel_intersets where `baddel`.`baddel_intersets`.`name` like #value# </delete> 
	<insert id="baddel_intersets_insertSelective" parameterClass="com.baddel.datalayer.model.BaddelIntersets" >
		insert into `baddel`.`baddel_intersets` 
		<dynamic prepend="(" > 
			 <isNotNull prepend="," property="name" > `name` </isNotNull>  )
		</dynamic>
		values 
		<dynamic prepend="(" > 
			 <isNotNull prepend="," property="name" > #name# </isNotNull>  ) 
		</dynamic> 
		<selectKey resultClass="java.lang.Integer" keyProperty="id"> 
		select last_insert_id() as id
		</selectKey> 
	</insert>
	<update id="baddel_intersets_updateByPrimaryKeySelective" parameterClass="com.baddel.datalayer.model.BaddelIntersets" > 
		update `baddel`.`baddel_intersets`
		<dynamic prepend="set" > 
			  <isNotNull prepend="," property="name" > `name` = #name# </isNotNull>  
		</dynamic> 
		where `baddel`.`baddel_intersets`.`id` = #id# 
		</update> 
</sqlMap>
